#Colocalization with HyPrColoc
# http://127.0.0.1:30129/library/hyprcoloc/doc/hyprcoloc.html
library(MendelianRandomization)
library(TwoSampleMR)
library(MRInstruments)
library(tidyverse)
library(rio)
library(hyprcoloc)

# load
setwd("~/Desktop/mediation/DIET_MR")

# T2D # Mahajan
t2dadjbmi_data <- extract_instruments(outcomes='ebi-a-GCST007516') #performs LD based clumping to return only independent significant associations

#CARBS Download files from https://www.thessgac.org/data
carb_fil_data <- read_exposure_data(
    filename = "Diet_Carbohydrate_GWAS_MA_SSGAC_2020_MolPsych.txt",
    sep = "\t",
    snp_col = "rsID",
    beta_col = "Beta",
    se_col = "SE",
    effect_allele_col = "A1",
    other_allele_col = "A2",
    eaf_col = "FREQA1_HRC",
    pval_col = "Pval",
    samplesize_col = "N"
)

# SUGAR Download files from https://www.thessgac.org/data
sugar_fil_data <- read_exposure_data(
    filename = "Diet_Sugar_GWAS_MA_SSGAC_2020_MolPsych.txt",
    sep = "\t",
    snp_col = "rsID",
    beta_col = "Beta",
    se_col = "SE",
    effect_allele_col = "A1",
    other_allele_col = "A2",
    eaf_col = "FREQA1_HRC",
    pval_col = "Pval",
    samplesize_col = "N"
)

setwd("~/Desktop/mediation/DIET_MR/coloc")

MergedDF <- merge(t2dadjbmi_data, carb_fil_data, by ="SNP")
MergedDF_1 <- merge(MergedDF, sugar_fil_data, by ="SNP")

#
dim(MergedDF_1) #58
# export(MergedDF_1, "MergedDF_1.csv")

#coloc
names(MergedDF_1)
betas <- MergedDF_1[,c(1,6,21,33#,45,57#
                       )]
rownames(betas) <- betas[,1]
betas[,1] <- NULL
names(betas)[1] <- "T1"
names(betas)[2] <- "T2"
names(betas)[3] <- "T3"
# names(betas)[4] <- "T4"
# names(betas)[5] <- "T5"
betas <- as.matrix(betas)
#
ses <- MergedDF_1[,c(1,3,22,34#,46,58#
                     )]
rownames(ses) <- ses[,1]
ses[,1] <- NULL
names(ses)[1] <- "T1"
names(ses)[2] <- "T2"
names(ses)[3] <- "T3"
# names(ses)[4] <- "T4"
# names(ses)[5] <- "T5"
ses <- as.matrix(ses)
#
binary.traits = c(1,0,0#0,0#,0
                  );
traits <- paste0("T", 1:dim(betas)[2]);
rsid <- rownames(betas);
res <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, snpscores = TRUE);
res #rs1558902
sink("res_df_score.txt")           
res$snpscores[[2]]
sink() 

res_pleio <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, bb.selection = "reg.only", reg.thresh = 0.9);
res_pleio
#
res_binary <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, binary.outcomes = binary.traits);
res_binary # rs1558902
# Assessing sensitivity to changes in the prior configuration parameters 
prior.options = c(1e-4, 1e-10, 1e-15, 1e-20, 1e-25, 1e-100);
for(i in prior.options){
    res_binary <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, 
                     uniform.priors = TRUE, prior.1 = i, reg.steps = 2);
    print(paste0("prior.1 = ",i));
    print(res_binary);
}
#  prior.1 = 1e-10
prior.1 = 1e-10;
prior.c.options = c(0.05, 0.02, 0.01, 0.005);
for(i in prior.c.options){
    res_binary <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid,
                     uniform.priors = FALSE, prior.1 = prior.1, prior.c = i);
    print(c(paste0("prior.1 = ",prior.1), paste0("prior.c = ",i)));
    print(res_binary);
}
# 
res_binary # rs1558902
res_binary_df<-res_binary$results
export(res_binary_df, "res_binary_df.csv")

#The regional selection criterion:
res_regional <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, bb.selection = "regional");
res_regional # rs1558902
res_regional_df<-res_regional$results
export(res_regional_df, "res_regional_df.csv")
# AlignementL: Evidential strength and the regional and alignment thresholds  
res_alignment <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, uniform.priors = FALSE,
                 reg.thresh = 0.95, align.thresh = 0.95);
res_alignment #rs1558902 . Chromosome	16
res_alignment_df<-res_alignment$results
export(res_alignment_df, "res_alignment_df.csv")
# 
sensitivity.plot(betas, ses, trait.names = traits, snp.id=rsid, 
                 reg.thresh = c(0.6,0.7,0.8,0.9), align.thresh = c(0.6,0.7,0.8,0.9), prior.c = c(0.02, 0.01, 0.005), equal.thresholds = FALSE);
#Switching the algorithm off
res_off <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, bb.alg = FALSE);
res_off #rs7903146 . Chromosome	10. Gene	TCF7L2
res_off_df<-res_off$results
export(res_off_df, "res_off_df.csv")

# Plot
library(locuscomparer)
MergedDF_1_plot<-MergedDF_1
names(MergedDF_1_plot)[names(MergedDF_1_plot) == "SNP"] <- "rsid"
names(MergedDF_1_plot)[names(MergedDF_1_plot) == "pval.exposure.x"] <- "pval"
names(MergedDF_1_plot)[names(MergedDF_1_plot) == "pval.exposure.y"] <- "pval"

MergedDF_1_filtered_16<-filter(MergedDF_1_plot, chr.exposure == 16)
locuscompare(in_fn1 = MergedDF_1_filtered_16[,c(1,20)], 
             in_fn2 = MergedDF_1_filtered_16[,c(1,20)],
             title1 = 'T2D adjusted BMI  GWAS',
             title2 = 'Carbohydrate-Sugar (E%) intake GWAS')
#
MergedDF_1_filtered_10<-filter(MergedDF_1_plot, chr.exposure == 10)
locuscompare(in_fn1 = MergedDF_1_filtered_10[,c(1,5)], 
             in_fn2 = MergedDF_1_filtered_10[,c(1,5)],
             title1 = 'T2D adjusted BMI GWAS',
             title2 = 'Carbohydrate-Sugar (E%) intake GWAS')

######################### ######################### ######################### 
######################### Pairwise: CARB-SUGAR #########################
MergedDF_carb_sugar <- merge(carb_fil_data, sugar_fil_data, by = c("SNP"))
MergedDF_carb_sugar<- MergedDF_carb_sugar[MergedDF_carb_sugar$pval.exposure.x < 5e-08,]
dim(MergedDF_carb_sugar)
#coloc
names(MergedDF_carb_sugar)
betas_carb_sugar <- MergedDF_carb_sugar[,c(1,7,19)]
rownames(betas_carb_sugar) <- betas_carb_sugar[,1]
betas_carb_sugar[,1] <- NULL
names(betas_carb_sugar)[1] <- "T1"
names(betas_carb_sugar)[2] <- "T2"
betas_carb_sugar <- as.matrix(betas_carb_sugar)
#
ses_carb_sugar <- MergedDF_carb_sugar[,c(1,8,20)]
rownames(ses_carb_sugar) <- ses_carb_sugar[,1]
ses_carb_sugar[,1] <- NULL
names(ses_carb_sugar)[1] <- "T1"
names(ses_carb_sugar)[2] <- "T2"
ses_carb_sugar <- as.matrix(ses_carb_sugar)
#
traits_carb_sugar <- paste0("T", 1:dim(betas_carb_sugar)[2]);
rsid_carb_sugar <- rownames(betas_carb_sugar);
res_pairwise_carb_sugar <- hyprcoloc(betas_carb_sugar, ses_carb_sugar, trait.names=traits_carb_sugar, snp.id=rsid_carb_sugar,snpscores = TRUE);
res_pairwise_carb_sugar #rs838144 *chr19
#
prior.options = c(1e-4, 1e-10, 1e-15, 1e-20, 1e-25, 1e-100);
for(i in prior.options){
    res_pairwise_carb_sugar <- hyprcoloc(betas_carb_sugar, ses_carb_sugar, trait.names=traits_carb_sugar, snp.id=rsid_carb_sugar, 
                     uniform.priors = TRUE, prior.1 = i, reg.steps = 2);
    print(paste0("prior.1 = ",i));
    print(res_pairwise_carb_sugar);
}
res_pairwise_carb_sugar_df<-res_pairwise_carb_sugar$results
export(res_pairwise_carb_sugar_df, "res_pairwise_carb_sugar_df.csv")
######################### Pairwise: T2D-SUGAR #########################
MergedDF_t2dadjbmi_sugar <- merge(t2dadjbmi_data, sugar_fil_data, by.x ="SNP", by.y ="rsid")
MergedDF_t2dadjbmi_sugar<- MergedDF_t2dadjbmi_sugar[MergedDF_t2dadjbmi_sugar$pval.exposure < 5e-08,]
dim(MergedDF_t2dadjbmi_sugar)
#coloc
names(MergedDF_t2dadjbmi_sugar)
betas_t2dadjbmi_sugar <- MergedDF_t2dadjbmi_sugar[,c(1,6,21)]
rownames(betas_t2dadjbmi_sugar) <- betas_t2dadjbmi_sugar[,1]
betas_t2dadjbmi_sugar[,1] <- NULL
names(betas_t2dadjbmi_sugar)[1] <- "T1"
names(betas_t2dadjbmi_sugar)[2] <- "T2"
betas_t2dadjbmi_sugar <- as.matrix(betas_t2dadjbmi_sugar)
#
ses_t2dadjbmi_sugar <- MergedDF_t2dadjbmi_sugar[,c(1,3,22)]
rownames(ses_t2dadjbmi_sugar) <- ses_t2dadjbmi_sugar[,1]
ses_t2dadjbmi_sugar[,1] <- NULL
names(ses_t2dadjbmi_sugar)[1] <- "T1"
names(ses_t2dadjbmi_sugar)[2] <- "T2"
ses_t2dadjbmi_sugar <- as.matrix(ses_t2dadjbmi_sugar)
#
binary.traits = c(1,0)
traits_t2dadjbmi_sugar <- paste0("T", 1:dim(betas_t2dadjbmi_sugar)[2]);
rsid_t2dadjbmi_sugar <- rownames(betas_t2dadjbmi_sugar);
res_pairwise_t2dadjbmi_sugar <- hyprcoloc(betas_t2dadjbmi_sugar, ses_t2dadjbmi_sugar, trait.names=traits_t2dadjbmi_sugar, snp.id=rsid_t2dadjbmi_sugar,snpscores = TRUE, binary.outcomes = binary.traits);
res_pairwise_t2dadjbmi_sugar
#
prior.options = c(1e-4, 1e-10, 1e-15, 1e-20, 1e-25, 1e-100);
for(i in prior.options){
    res_pairwise_t2dadjbmi_sugar <- hyprcoloc(betas_t2dadjbmi_sugar, ses_t2dadjbmi_sugar, trait.names=traits_t2dadjbmi_sugar, snp.id=rsid_t2dadjbmi_sugar, 
                                         uniform.priors = TRUE, prior.1 = i, reg.steps = 2);
    print(paste0("prior.1 = ",i));
    print(res_pairwise_t2dadjbmi_sugar);
}
res_pairwise_t2dadjbmi_sugar_df<-res_pairwise_t2dadjbmi_sugar$results
export(res_pairwise_t2dadjbmi_sugar_df, "res_pairwise_t2dadjbmi_sugar_df.csv")
######################### Pairwise: T2D-CARB #########################
MergedDF_t2dadjbmi_carb <- merge(t2dadjbmi_data, carb_fil_data, by.x ="SNP", by.y ="rsid")
MergedDF_t2dadjbmi_carb<- MergedDF_t2dadjbmi_carb[MergedDF_t2dadjbmi_carb$pval.exposure < 5e-08,]
dim(MergedDF_t2dadjbmi_carb)
#coloc
names(MergedDF_t2dadjbmi_carb)
betas_t2dadjbmi_carb <- MergedDF_t2dadjbmi_carb[,c(1,6,21)]
rownames(betas_t2dadjbmi_carb) <- betas_t2dadjbmi_carb[,1]
betas_t2dadjbmi_carb[,1] <- NULL
names(betas_t2dadjbmi_carb)[1] <- "T1"
names(betas_t2dadjbmi_carb)[2] <- "T2"
betas_t2dadjbmi_carb <- as.matrix(betas_t2dadjbmi_carb)
#
ses_t2dadjbmi_carb <- MergedDF_t2dadjbmi_carb[,c(1,3,22)]
rownames(ses_t2dadjbmi_carb) <- ses_t2dadjbmi_carb[,1]
ses_t2dadjbmi_carb[,1] <- NULL
names(ses_t2dadjbmi_carb)[1] <- "T1"
names(ses_t2dadjbmi_carb)[2] <- "T2"
ses_t2dadjbmi_carb <- as.matrix(ses_t2dadjbmi_carb)
#
binary.traits = c(1,0)
traits_t2dadjbmi_carb <- paste0("T", 1:dim(betas_t2dadjbmi_carb)[2]);
rsid_t2dadjbmi_carb <- rownames(betas_t2dadjbmi_carb);
res_pairwise_t2dadjbmi_carb <- hyprcoloc(betas_t2dadjbmi_carb, ses_t2dadjbmi_carb, trait.names=traits_t2dadjbmi_carb, snp.id=rsid_t2dadjbmi_carb,snpscores = TRUE, binary.outcomes = binary.traits);
res_pairwise_t2dadjbmi_carb
#
prior.options = c(1e-4, 1e-10, 1e-15, 1e-20, 1e-25, 1e-100);
for(i in prior.options){
    res_pairwise_t2dadjbmi_carb <- hyprcoloc(betas_t2dadjbmi_carb, ses_t2dadjbmi_carb, trait.names=traits_t2dadjbmi_carb, snp.id=rsid_t2dadjbmi_carb, 
                                              uniform.priors = TRUE, prior.1 = i, reg.steps = 2);
    print(paste0("prior.1 = ",i));
    print(res_pairwise_t2dadjbmi_carb);
}
res_pairwise_t2dadjbmi_carb_df<-res_pairwise_t2dadjbmi_carb$results
export(res_pairwise_t2dadjbmi_carb_df, "res_pairwise_t2dadjbmi_carb_df.csv")
############### END #################################
# ALL TRAITS
############### 
#coloc
names(MergedDF_3)
betas <- MergedDF_3[,c(1,6,21,33,45,57
)]
rownames(betas) <- betas[,1]
betas[,1] <- NULL
names(betas)[1] <- "T1"
names(betas)[2] <- "T2"
names(betas)[3] <- "T3"
names(betas)[4] <- "T4"
names(betas)[5] <- "T5"
betas <- as.matrix(betas)
#
ses <- MergedDF_3[,c(1,3,22,34,46,58
)]
rownames(ses) <- ses[,1]
ses[,1] <- NULL
names(ses)[1] <- "T1"
names(ses)[2] <- "T2"
names(ses)[3] <- "T3"
names(ses)[4] <- "T4"
names(ses)[5] <- "T5"
ses <- as.matrix(ses)
#
binary.traits = c(1,0,0,0,0
);
traits <- paste0("T", 1:dim(betas)[2]);
rsid <- rownames(betas);
res_all <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, snpscores = TRUE, bb.alg = FALSE);
res_all #rs1558902
sink("res_df_score.txt")           
res_all$snpscores[[2]]
sink() 


#
res_binary <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, binary.outcomes = binary.traits);
res_binary # rs1558902
# Assessing sensitivity to changes in the prior configuration parameters 
prior.options = c(1e-4, 1e-10, 1e-15, 1e-20, 1e-25, 1e-100);
for(i in prior.options){
    res_binary <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, 
                            uniform.priors = TRUE, prior.1 = i, reg.steps = 2);
    print(paste0("prior.1 = ",i));
    print(res_binary);
}
#  prior.1 = 1e-10
prior.1 = 1e-10;
prior.c.options = c(0.05, 0.02, 0.01, 0.005);
for(i in prior.c.options){
    res_binary <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid,
                            uniform.priors = FALSE, prior.1 = prior.1, prior.c = i);
    print(c(paste0("prior.1 = ",prior.1), paste0("prior.c = ",i)));
    print(res_binary);
}
# 
res_binary # rs1558902
res_binary_df<-res_binary$results
export(res_binary_df, "res_binary_df.csv")

#The regional selection criterion:
res_regional <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, bb.selection = "regional");
res_regional # rs1558902
res_regional_df<-res_regional$results
export(res_regional_df, "res_regional_df.csv")
# AlignementL: Evidential strength and the regional and alignment thresholds  
res_alignment <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, uniform.priors = FALSE,
                           reg.thresh = 0.95, align.thresh = 0.95);
res_alignment #rs1558902 . Chromosome	16
res_alignment_df<-res_alignment$results
export(res_alignment_df, "res_alignment_df.csv")
# 
sensitivity.plot(betas, ses, trait.names = traits, snp.id=rsid, 
                 reg.thresh = c(0.6,0.7,0.8,0.9), align.thresh = c(0.6,0.7,0.8,0.9), prior.c = c(0.02, 0.01, 0.005), equal.thresholds = FALSE);
#Switching the algorithm off
res_off <- hyprcoloc(betas, ses, trait.names=traits, snp.id=rsid, bb.alg = FALSE);
res_off #rs7903146 . Chromosome	10. Gene	TCF7L2
res_off_df<-res_off$results
export(res_off_df, "res_off_df.csv")

# Plot
library(locuscomparer)
MergedDF_1_plot<-MergedDF_3
names(MergedDF_1_plot)[names(MergedDF_1_plot) == "SNP"] <- "rsid"
names(MergedDF_1_plot)[names(MergedDF_1_plot) == "pval.exposure.x"] <- "pval"
names(MergedDF_1_plot)[names(MergedDF_1_plot) == "pval.exposure.y"] <- "pval"

MergedDF_1_filtered_16<-filter(MergedDF_1_plot, chr.exposure == 16)
locuscompare(in_fn1 = MergedDF_1_filtered_16[,c(1,20)], 
             in_fn2 = MergedDF_1_filtered_16[,c(1,20)],
             title1 = 'T2D adjusted BMI  GWAS',
             title2 = 'Carbohydrate-Sugar (E%) intake GWAS')
#
MergedDF_1_filtered_10<-filter(MergedDF_1_plot, chr.exposure == 10)
locuscompare(in_fn1 = MergedDF_1_filtered_10[,c(1,5)], 
             in_fn2 = MergedDF_1_filtered_10[,c(1,5)],
             title1 = 'T2D adjusted BMI GWAS',
             title2 = 'Carbohydrate-Sugar (E%) intake GWAS')
